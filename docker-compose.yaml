x-backend-env: &backend-env 
  - DEBUG=True
  - USE_HTTPS=False
  - HOSTNAME=localhost
  - SECRET_KEY=${SECRET_KEY}
  - DB_NAME=arbitre
  - DB_USER=arbitre
  - DB_PASSWORD=${DB_PASSWORD}
  - DB_HOST=db
  - DB_PORT=5432
  - KEYCLOAK_URL=http://keycloak:8080
  - KEYCLOAK_REALM_NAME=master
  - KEYCLOAK_ADMIN_USERNAME=admin
  - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
  - OIDC_RP_CLIENT_ID=arbitre
  - API_KEY=${BACKEND_API_KEY}
  - REDIS_URL=redis://redis:6379/0

services:
  frontend:
    build: ./frontend
    environment:
      - REACT_APP_DEV=true
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_KEYCLOAK_URL=http://localhost:8080
      - REACT_APP_KEYCLOAK_REALM_NAME=master
      - REACT_APP_KEYCLOAK_CLIENT_ID=arbitre
    depends_on:
      - backend
    networks:
      - arbitre_network

  backend:
    build: ./backend
    environment: *backend-env 
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - keycloak
    networks:
      - arbitre_network

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=arbitre
      - POSTGRES_USER=arbitre
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - arbitre_network

  kc-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - arbitre_network

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.4
    command: start-dev
    environment:
      - KC_DB=postgres
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KC_DB_URL=jdbc:postgresql://kc-db:5432/keycloak
      - KC_DB_USERNAME=keycloak

      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_PORT=8080
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false

      - KC_HTTP_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      
      - KC_LOG_LEVEL=debug
    ports:
      - 8080:8080
    depends_on:
      - kc-db
    networks:
      - arbitre_network

  redis:
    image: redis:6
    networks:
      - arbitre_network

  rabbitmq:
    image: rabbitmq:4-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - arbitre_network

  celery:
    build: ./backend
    command: celery -A arbitre worker -l info
    environment: *backend-env
    depends_on:
      - backend
      - redis
      - rabbitmq
      - keycloak
    networks:
      - arbitre_network

  # celery_beat:
  #   build: ./backend
  #   command: celery -A arbitre beat -l info
  #   environment:
  #     - HOSTNAME=localhost
  #     - KEYCLOAK_URL=http://keycloak:8080
  #   depends_on:
  #     - backend
  #     - redis
  #     - keycloak

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default-dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
      - keycloak
    networks:
      - arbitre_network

volumes:
  postgres_data:
    driver: local
  keycloak_postgres_data:
    driver: local

networks:
  arbitre_network:
    driver: bridge
