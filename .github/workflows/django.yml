name: Django CI

on:
  pull_request:
    branches: [ "none" ]
    
jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: arbitre-test        
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v11
      with:
        name: arbitre
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - uses: iamsauravsharma/create-dotenv@v1.2.2
      with:
        env-prefix: 'envkey_' # Optional (default: '')
        file-name: '.env' # Optional (default : '.env')
        directory: 'backend/arbitre/' # Optional (default: '.')
      env: # env available for only this steps
        IS_SERVER: true
        envkey_DEBUG: false
        envkey_USE_HTTPS: false
        envkey_HOSTNAME: localhost
        envkey_SECRET_KEY: django-insecure-9p0it%1(1)sv%+s&bv0n@8330j*_)qm76ejwrzg(nea-m=v278
        envkey_DB_NAME: arbitre-test
        envkey_DB_USER: test
        envkey_DB_PASSWORD: test
        envkey_DB_HOST: localhost
        envkey_DB_PORT: ''

    - name: Run tests in nix development environment
      run: |
        nix develop --command bash -c "cd backend && coverage run manage.py test && coverage report"